{"expireTime":9007200840506823000,"key":"gatsby-plugin-mdx-entire-payload-ecd3bf11f7809990286c2ca5c50e0343-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/timeless/Documents/projects/chakra-components/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":131,"offset":132},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":134},"end":{"line":5,"column":29,"offset":162},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\"\nimport Checkbox from './index'","position":{"start":{"line":8,"column":1,"offset":165},"end":{"line":9,"column":31,"offset":236},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Checkbox","position":{"start":{"line":11,"column":3,"offset":240},"end":{"line":11,"column":11,"offset":248},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":238},"end":{"line":11,"column":11,"offset":248},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Checkbox component that wraps Chakra","position":{"start":{"line":13,"column":1,"offset":250},"end":{"line":13,"column":37,"offset":286},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":250},"end":{"line":13,"column":37,"offset":286},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The HTML DOM structure is","position":{"start":{"line":15,"column":1,"offset":288},"end":{"line":15,"column":26,"offset":313},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":288},"end":{"line":15,"column":26,"offset":313},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"<label>          // Wraps the entire checkbox (override - wrapper)\n  <input />      // Hidden input to carry the value / states like focused\n  <div />        // contains a div with <svg /> (override - controlBox)\n  <span />       // Holds the label (override - label)\n</label>","position":{"start":{"line":17,"column":1,"offset":315},"end":{"line":23,"column":4,"offset":599},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":25,"column":4,"offset":604},"end":{"line":25,"column":9,"offset":609},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":601},"end":{"line":25,"column":9,"offset":609},"indent":[]}},{"type":"jsx","value":"<Props of={Checkbox}/>","position":{"start":{"line":27,"column":1,"offset":611},"end":{"line":27,"column":23,"offset":633},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Default Checkbox","position":{"start":{"line":29,"column":4,"offset":638},"end":{"line":29,"column":20,"offset":654},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":635},"end":{"line":29,"column":20,"offset":654},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Checkbox>Click me</Checkbox>\n</Playground>","position":{"start":{"line":30,"column":1,"offset":655},"end":{"line":32,"column":14,"offset":713},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Disabled Checkbox","position":{"start":{"line":34,"column":4,"offset":718},"end":{"line":34,"column":21,"offset":735},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":715},"end":{"line":34,"column":21,"offset":735},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Checkbox isDisabled={true}>Click me</Checkbox>\n</Playground>","position":{"start":{"line":35,"column":1,"offset":736},"end":{"line":37,"column":14,"offset":812},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Reversed Checkbox","position":{"start":{"line":39,"column":4,"offset":817},"end":{"line":39,"column":21,"offset":834},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":814},"end":{"line":39,"column":21,"offset":834},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Checkbox isReversed={true}>Click me</Checkbox>\n</Playground>","position":{"start":{"line":40,"column":1,"offset":835},"end":{"line":42,"column":14,"offset":911},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Checkbox with custom color","position":{"start":{"line":44,"column":4,"offset":916},"end":{"line":44,"column":30,"offset":942},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":913},"end":{"line":44,"column":30,"offset":942},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Checkbox>This is the normal box</Checkbox>","position":{"start":{"line":45,"column":1,"offset":943},"end":{"line":46,"column":46,"offset":1001},"indent":[1]}},{"type":"jsx","value":"  <Checkbox override={{\n    wrapper: { lineHeight: 5 },\n    controlBox: { w: 10, h: 10 }\n  }}>\n    This is a bigger box with more line height\n  </Checkbox>","position":{"start":{"line":48,"column":1,"offset":1003},"end":{"line":53,"column":14,"offset":1158},"indent":[1,1,1,1,1]}},{"type":"jsx","value":"  <Checkbox override={{ controlBox: { w: 20, h: 20 }}}>This is a much bigger box</Checkbox>","position":{"start":{"line":55,"column":1,"offset":1160},"end":{"line":55,"column":92,"offset":1251},"indent":[]}},{"type":"jsx","value":"  <Checkbox override={{\n    controlBox: { w: 20, h: 20 },\n    label: { fontSize: 40 }\n  }}>This is a much bigger box with bigger text</Checkbox>\n</Playground>","position":{"start":{"line":57,"column":1,"offset":1253},"end":{"line":61,"column":14,"offset":1411},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":64,"column":1,"offset":1414},"end":{"line":64,"column":31,"offset":1444},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":31,"offset":1444}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/timeless/Documents/projects/chakra-components/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\"\nimport Checkbox from './index'\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Checkbox component that wraps Chakra`}</p>\n    <p>{`The HTML DOM structure is`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<label>          // Wraps the entire checkbox (override - wrapper)\n  <input />      // Hidden input to carry the value / states like focused\n  <div />        // contains a div with <svg /> (override - controlBox)\n  <span />       // Holds the label (override - label)\n</label>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"default-checkbox\"\n    }}>{`Default Checkbox`}</h2>\n    <Playground __position={1} __code={'<Checkbox>Click me</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox\n    }} mdxType=\"Playground\">\n  <Checkbox mdxType=\"Checkbox\">Click me</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled-checkbox\"\n    }}>{`Disabled Checkbox`}</h2>\n    <Playground __position={2} __code={'<Checkbox isDisabled={true}>Click me</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox\n    }} mdxType=\"Playground\">\n  <Checkbox isDisabled={true} mdxType=\"Checkbox\">Click me</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"reversed-checkbox\"\n    }}>{`Reversed Checkbox`}</h2>\n    <Playground __position={3} __code={'<Checkbox isReversed={true}>Click me</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox\n    }} mdxType=\"Playground\">\n  <Checkbox isReversed={true} mdxType=\"Checkbox\">Click me</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"checkbox-with-custom-color\"\n    }}>{`Checkbox with custom color`}</h2>\n    <Playground __position={4} __code={'<Checkbox>This is the normal box</Checkbox>\\n<Checkbox\\n  override={{\\n    wrapper: { lineHeight: 5 },\\n    controlBox: { w: 10, h: 10 },\\n  }}\\n>\\n  This is a bigger box with more line height\\n</Checkbox>\\n<Checkbox override={{ controlBox: { w: 20, h: 20 } }}>\\n  This is a much bigger box\\n</Checkbox>\\n<Checkbox\\n  override={{\\n    controlBox: { w: 20, h: 20 },\\n    label: { fontSize: 40 },\\n  }}\\n>\\n  This is a much bigger box with bigger text\\n</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox\n    }} mdxType=\"Playground\">\n  <Checkbox mdxType=\"Checkbox\">This is the normal box</Checkbox>\n  <Checkbox override={{\n        wrapper: {\n          lineHeight: 5\n        },\n        controlBox: {\n          w: 10,\n          h: 10\n        }\n      }} mdxType=\"Checkbox\">\n    This is a bigger box with more line height\n  </Checkbox>\n  <Checkbox override={{\n        controlBox: {\n          w: 20,\n          h: 20\n        }\n      }} mdxType=\"Checkbox\">This is a much bigger box</Checkbox>\n  <Checkbox override={{\n        controlBox: {\n          w: 20,\n          h: 20\n        },\n        label: {\n          fontSize: 40\n        }\n      }} mdxType=\"Checkbox\">This is a much bigger box with bigger text</Checkbox>\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}